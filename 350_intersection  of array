import java.util.ArrayList;
import java.util.HashMap;

class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> hm1 = new HashMap<>();
        HashMap<Integer, Integer> hm2 = new HashMap<>();
        
        // Populate hm1 with counts from nums1
        for (int i = 0; i < nums1.length; i++) {
            if (hm1.containsKey(nums1[i])) {
                hm1.put(nums1[i], hm1.get(nums1[i]) + 1);
            } else {
                hm1.put(nums1[i], 1);
            }
        }
        
        // Populate hm2 with counts from nums2
        for (int i = 0; i < nums2.length; i++) {
            if (hm2.containsKey(nums2[i])) {
                hm2.put(nums2[i], hm2.get(nums2[i]) + 1);
            } else {
                hm2.put(nums2[i], 1);
            }
        }
        
        // Find intersection and collect results
        ArrayList<Integer> arr = new ArrayList<>();
        for (Integer key : hm1.keySet()) {
            if (hm2.containsKey(key)) {
                int count = Math.min(hm1.get(key), hm2.get(key));
                while (count-- > 0) {
                    arr.add(key);
                }
            }
        }
        
        // Convert ArrayList to int[]
        int[] res = new int[arr.size()];
        for (int i = 0; i < arr.size(); i++) {
            res[i] = arr.get(i);
        }
        
        return res;
    }
}
